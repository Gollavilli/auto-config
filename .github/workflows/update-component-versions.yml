name: EKS Component Version Updater

on:
  schedule:
    # Run every 10 days
    - cron: '0 0 */10 * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-versions:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper branching

      - name: Generate branch name
        id: branch-name
        run: |
          echo "BRANCH_NAME=version-update-$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub requests PyYAML
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Create and checkout new branch
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b ${{ steps.branch-name.outputs.BRANCH_NAME }}

      - name: Ensure config directory exists
        run: |
          mkdir -p config

      - name: Copy metadata file if it doesn't exist
        run: |
          if [ ! -f config/metadata.json ]; then
            cp metadata.json config/metadata.json || echo "No metadata.json in root directory"
          fi

      - name: Update component versions
        id: update-versions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Print environment for debugging
          echo "Current directory: $(pwd)"
          echo "Files in directory:"
          ls -la
          
          if [ -f config/metadata.json ]; then
            echo "Found metadata.json in config directory"
            cat config/metadata.json
          else
            echo "WARNING: Metadata file not found in config directory"
          fi
          
          # Run the update script
          python update_component_versions.py

      - name: Check for changes
        id: git-check
        run: |
          git status
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "CHANGES=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
          else
            echo "CHANGES=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi

      - name: Commit and push changes
        if: steps.git-check.outputs.CHANGES == 'true'
        run: |
          git add config/metadata.json
          git commit -m "chore: update component versions $(date +'%Y-%m-%d')"
          git push --set-upstream origin ${{ steps.branch-name.outputs.BRANCH_NAME }} --force

      - name: Create Pull Request
        if: steps.git-check.outputs.CHANGES == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update component versions"
          title: "chore: update component versions $(date +'%Y-%m-%d')"
          body: |
            This PR updates the following components to their latest versions:

            ${{ steps.update-versions.outputs.changes }}

            This PR was automatically generated by the EKS Component Version Updater workflow.
          branch: ${{ steps.branch-name.outputs.BRANCH_NAME }}
          base: main
          delete-branch: false
          labels: |
            version-update
            automated-pr
